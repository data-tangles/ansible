# Change IP Address of new server
- name: Gathering ipam auth token
  uri:
    validate_certs: false
    url: "{{ IPAM_TOKEN_REQUEST }}"
    method: POST
    headers: 
      Content-Type: application/json
    user: "{{ IPAM_USER }}"
    password: "{{ IPAM_PASSWORD | trim }}"
    force_basic_auth: yes
  register: output
  delegate_to: localhost

- name: checking subnet for next available ip address
  uri:
    validate_certs: false
    url: "{{ IPAM_AVAILABLE_IP }}{{ IPAM_SUBNET_ID | int }}"
    headers:
      token: "{{ output.json.data.token }}"
      Content-Type: application/json
  register: ip_address
  delegate_to: localhost

- name: reserve ip address
  uri:
    validate_certs: false
    url: "{{ IPAM_AVAILABLE_IP }}{{ IPAM_SUBNET_ID | int }}"
    method: POST
    headers: 
      token: "{{ output.json.data.token }}"
      Content-Type: application/json
    body_format: json
    status_code: 201
    body:
      hostname: "{{ HOSTNAME }}"
      description: " {{ IPAM_DESCRIPTION }}"
  delegate_to: localhost

- name: Set up static IP address
  ansible.windows.win_shell: | 
    "Get-NetIpAddress -InterfaceAlias 'Ethernet*' | New-NetIpAddress -IpAddress {{ ip_address }} -PrefixLength 24 -DefaultGateway {{ GATEWAY }}" 
    "Get-DnsClientServerAddress -InterfaceAlias 'Ethernet*' | Set-DnsClientServerAddress -ServerAddresses {{ DNS_SERVERS }}"
  async: 100 # Using "fire-and-forget" asynchronous execution for this task, otherwise it will always fail and timeout
  poll: 0
  ignore_errors: true

- name: Change ansible's ip address for each host
  set_fact:
    ansible_host: "{{ ip_address }}"

- name: Wait for the hosts network interface to come back up
  local_action:
    module: wait_for
    host: "{{ ansible_host }}"
    port: "{{ WINRM_PORT }}"
    delay: 10
    state: started
  register: wait_result

# Join server to domain  

- name: Join server to domain
  ansible.windows.win_domain_membership:
    dns_domain_name: "{{ DNS_DOMAIN_NAME }}"
    hostname: "{{ HOSTNAME }}"
    domain_admin_user: "{{ DOMAIN_ADMIN_USER }}"
    domain_admin_password: "{{ DOMAIN_ADMIN_PASSWORD }}"
    domain_ou_path: "{{ DOMAIN_OU_PATH }}"
    state: domain
  register: domain_state

- name: Reboot server after domain join  
  ansible.windows.win_reboot:
  when: domain_state.reboot_required
