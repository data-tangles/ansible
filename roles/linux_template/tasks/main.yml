# Change IP Address of new server
- name: Gathering ipam auth token
  uri:
    validate_certs: false
    url: "{{ IPAM_TOKEN_REQUEST }}"
    method: POST
    headers: 
      Content-Type: application/json
    user: "{{ IPAM_USER }}"
    password: "{{ IPAM_PASSWORD | trim }}"
    force_basic_auth: yes
  register: output
  delegate_to: localhost

- name: checking subnet for next available ip address
  uri:
    validate_certs: false
    url: "{{ IPAM_AVAILABLE_IP }}{{ IPAM_SUBNET_ID | int }}"
    headers:
      token: "{{ output.json.data.token }}"
      Content-Type: application/json
  register: ip_address
  delegate_to: localhost

- name: reserve ip address
  uri:
    validate_certs: false
    url: "{{ IPAM_AVAILABLE_IP }}{{ IPAM_SUBNET_ID | int }}"
    method: POST
    headers: 
      token: "{{ output.json.data.token }}"
      Content-Type: application/json
    body_format: json
    status_code: 201
    body:
      hostname: "{{ HOSTNAME }}"
      description: " {{ IPAM_DESCRIPTION }}"
  delegate_to: localhost

- name: Set a hostname specifying strategy
  ansible.builtin.hostname:
    name: "{{ HOSTNAME }}"
    use: debian

- name: Replace old hostname with new hostname (requires Ansible >= 2.4)
  ansible.builtin.replace:
    path: /etc/hosts
    regexp: '(.*)'
    replace: "{{ HOSTNAME }}"

- name: Copy the template 00-installer-config.yaml over
  template:
    src: 00-installer-config.yaml.ubuntu.j2
    dest: /etc/netplan/00-installer-config.yaml
    owner: root
    group: root
    mode: 0644
    backup: yes

- name: Apply and reload the new static ip address with netplan
  command: netplan apply
  become: true
  async: 100
  poll: 0

- name: Update Ansible with new ip address information
  set_fact:
    ansible_host: "{{ ip_address }}"

- name: Waiting for the hosts network to come back up
  local_action:
    module: wait_for
    host: "{{ ip_address }}"
    port: 22
    delay: 10
    state: started
  register: wait_result