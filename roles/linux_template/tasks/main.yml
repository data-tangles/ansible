- name: Set a hostname specifying strategy
  ansible.builtin.hostname:
    name: "{{ HOSTNAME }}"
    use: debian

- name: Replace old hostname with new hostname (requires Ansible >= 2.4)
  ansible.builtin.replace:
    path: /etc/hosts
    regexp: '(.*)'
    replace: "{{ HOSTNAME }}"

- name: Copy the template 00-installer-config.yaml over
  template:
    src: 00-installer-config.yaml.ubuntu.j2
    dest: /etc/netplan/00-installer-config.yaml
    owner: root
    group: root
    mode: 0644
    backup: yes

- name: Apply and reload the new static ip address with netplan
  command: netplan apply
  become: true
  async: 100
  poll: 0

- name: Update Ansible with new ip address information
  set_fact:
    ansible_host: "{{ IP_ADDRESS }}"

- name: Waiting for the hosts network to come back up
  local_action:
    module: wait_for
    host: "{{ IP_ADDRESS }}"
    port: 22
    delay: 10
    state: started
  register: wait_result

## Update phpIPAM 

- name: "Reserve an IP address"
  codeaffen.phpipam.address:
    app_id: "{{ IPAM_APP_ID }}"
    username: "{{ IPAM_USER }}"
    password: "{{ IPAM_PASSWORD }}"
    server_url: "{{ IPAM_SERVER_URL }}"
    address: "{{ IP_ADDRESS }}"
    section: "{{ IPAM_SECTION }}"
    hostname: "{{ HOSTNAME }}"
    description: "{{ IPAM_DESCRIPTION }}"
    subnet: "{{ IPAM_SUBNET }}"
  delegate_to: localhost 
  vars:
    ansible_become: false